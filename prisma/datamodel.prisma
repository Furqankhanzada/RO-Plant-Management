type User {
  id: ID! @unique
  name: String
  mobile: String! @unique
  password: String!
  type: UserType @default(value: RESIDENTIAL)
  role: Role! @default(value: CUSTOMER)
  address: Address @relation(name: "UserAddress" onDelete: CASCADE)
  discounts: [Discount] @relation(name: "DiscountsByUser" onDelete: CASCADE)
  transactions: [Transaction] @relation(name: "TransactionsByUser" onDelete: CASCADE)
  bottle: Bottle @relation(name: "Bottle" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum UserType {
  RESIDENTIAL
  COMMERCIAL
}

enum Role {
  ADMIN
  CUSTOMER
  EMPLOYEE
}

type Address {
  id: ID! @unique
  town: String
  area: String
  block: String
  house: String
  location: Location @relation(name: "AddressLocation" onDelete: CASCADE)
}

type Location {
  id: ID! @unique
  latitude: Float!
  longitude: Float!
}

type Product {
  id: ID! @unique
  name: String!
  price: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Discount {
  id: ID! @unique
  product: Product!
  discount: Float! @default(value: 0)
  user: User! @relation(name: "DiscountsByUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Transaction {
  id: ID! @unique
  type: TransactionType! @default(value: SELL)
  status: TransactionStatus! @default(value: PENDING)
  items: [Item!]! @relation(name: "ItemsByTransactions" onDelete: CASCADE)
  payment: Payment! @relation(name: "PaymentByTransactions" onDelete: CASCADE)
  user: User! @relation(name: "TransactionsByUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type Bottle {
  id: ID! @unique
  balance: Int! @default(value: 0)
  bottleTransactions: [BottleTransaction] @relation(name: "BottleTransactions" onDelete: CASCADE)
}

type BottleTransaction {
  id: ID! @unique
  bottle: Bottle! @relation(name: "BottleTransactions")
  in: Int! @default(value: 0)
  out: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Item {
  id: ID! @unique
  product: Product!
  quantity: Int!
  discount: Float! @default(value: 0)
  total: Int!
}

enum TransactionType {
  SELL
  PURCHASE
}

enum TransactionStatus {
  PENDING
  PROCESSING,
  COMPLETED
}

type Payment {
  id: ID! @unique
  paid: Int!
  balance: Int!
  method: PaymentMethod! @default(value: CASH)
  status: PaymentStatus @default(value: UNPAID)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  CHEQUE
}

enum PaymentStatus {
  PAID
  UNPAID
}
